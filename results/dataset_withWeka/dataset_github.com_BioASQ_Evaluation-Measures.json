[
    {
        "repository": "github.com/BioASQ/Evaluation-Measures",
        "file": "flat/BioASQEvaluation/src/tools/MathUtils.java",
        "code": "    private static void quickSort(/*@non_null@*/ int[] array, /*@non_null@*/  int[] index, int left, int right) {\n        if (left < right) {\n            int middle = partition(array, index, left, right);\n            quickSort(array, index, left, middle);\n            quickSort(array, index, middle + 1, right);\n        }\n  }\n",
        "methodStartingLine": 302,
        "methodEndingLine": 308,
        "jml": "//@ requires 0 <= first && first <= right && right < array.length;\n//@ requires (\\forall int i; 0 <= i && i < index.length; 0 <= index[i] && index[i] < array.length);\n//@ requires array != index;"
    },
    {
        "repository": "github.com/BioASQ/Evaluation-Measures",
        "file": "flat/BioASQEvaluation/src/tools/MathUtils.java",
        "code": "    private static void quickSort(/*@non_null@*/ double[] array, /*@non_null@*/ int[] index, int left, int right) {\n        if (left < right) {\n            int middle = partition(array, index, left, right);\n            quickSort(array, index, left, middle);\n            quickSort(array, index, middle + 1, right);\n        }\n    }\n",
        "methodStartingLine": 322,
        "methodEndingLine": 328,
        "jml": "//@ requires 0 <= first && first <= right && right < array.length;\n//@ requires (\\forall int i; 0 <= i && i < index.length; 0 <= index[i] && index[i] < array.length);\n//@ requires array != index;"
    }
]