[
    {
        "repository": "github.com/apl-cornell/fabric",
        "file": "src/lib/sif/src/sif/servlet/OptimalCodeWriter.java",
        "code": "    FormatResult formatN(int lmargin, int pos, int rmargin, int fin,\n            MaxLevels m, int minLevel, int minLevelUnified) throws Overrun {\n        if (canLeaveUnbroken(minLevel, minLevelUnified)) {\n            // first, we can try not breaking it\n            try {\n                if (OptimalCodeWriter.debug)\n                    System.err.println(\"trying not breaking it.\");\n                broken = false;\n                return format(next, lmargin, pos + altlen, rmargin, fin,\n                    new MaxLevels(\n                            Math.min(unified ? level - 1 : level, m.maxLevel),\n                            Math.min(level - 1, m.maxLevelInner)),\n                    minLevel, minLevelUnified);\n\n            }\n            //  |yyy^xxxx\n            //  |xxxxx\n            //  |xxx\n            // pos overrun: might help by breaking\n            // width overrun: might help by breaking (e.g., if breaking permits nested breaks)\n            // fin overrun: similar\n            catch (Overrun o) {\n                if (OptimalCodeWriter.debug) {\n                    System.err.println(\"not breaking caused overrun of \" + o.amount);\n                }\n                if (level > m.maxLevel) {\n                    if (OptimalCodeWriter.debug) {\n                        System.err.println(\"not breaking failed, but can't break either.\");\n                    }\n                    throw o; // can't break it\n                }\n            }\n        }\n        if (canBreak(m)) { // now, we can try breaking it\n            if (OptimalCodeWriter.debug)\n                System.err.println(\"trying breaking \" + this);\n            broken = true;\n            try {\n                return format(next, lmargin, lmargin + indent, rmargin, fin, m,\n                        Math.max(level-1, minLevel),\n                        Math.max(level, minLevelUnified));\n            }\n            //  |yyy^\n            //  |  xxxx\n            //  |  xxxxxx\n            //  |  xxx\n            // pos overrun: becomes a width overrun?\n            // width overrun: remains\n            // fin overrun: remains? becomes a width overrun?\n            catch (Overrun o) {\n                o.type = Overrun.WIDTH; throw o;\n            }\n        }\n        throw new IllegalArgumentException(\"could not either break or not break\");\n    }\n",
        "methodStartingLine": 643,
        "methodEndingLine": 697,
        "jml": "//@ requires n_ >= 0\n//@ requires alt_ != null"
    }
]