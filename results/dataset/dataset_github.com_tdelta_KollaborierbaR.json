[
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/Wellfounded/B.java",
        "code": "    void m(int[][] array) {\n\n\tint row = 0;\n\tint col = 0;\n\tint sum = 0;\n\n\t/*@ maintaining 0 <= row && row <= array.length && 0 <= col && col <= array[row].length;\n\t  @ decreases \\dl_pair(array.length - row, array[row].length - col);\n\t  @ assignable \\strictly_nothing;\n\t  @*/\n\twhile(row < array.length) {\n\t    if(col < array[row].length) {\n\t\tsum += array[row][col];\n\t\tcol ++;\n\t    } else {\n\t\tcol = 0;\n\t\trow ++;\n\t    }\n\t}\n    }\n",
        "methodStartingLine": 4,
        "methodEndingLine": 23,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/firstTouch/08-Java5/src/For.java",
        "code": "  int sum () {\n    int s = 0;\n    int z = a.length;\n\n    /*@ maintaining s == (\\sum int j; 0 <= j && j < \\index; a[j]);\n      @ maintaining 0 <= \\index && \\index <= a.length;\n      @ decreasing a.length - \\index;\n      @ assignable \\strictly_nothing;\n      @*/\n    for (int i: a) s+= i;\n    return s;\n  }\n",
        "methodStartingLine": 8,
        "methodEndingLine": 19,
        "jml": "//@ ensures \\result == (\\sum int j; 0 <= j && j < a.length; a[j]);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/model_methods/src/Coll.java",
        "code": "    void test(Coll1 c1, Coll2 c2) {\n        callAdd(c1, 42);\n        callAdd(c2, -42);\n    }\n",
        "methodStartingLine": 20,
        "methodEndingLine": 23,
        "jml": "//@ requires \\invariant_for(c1) && \\invariant_for(c2);\n//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/firstTouch/11-StateMerging/A.java",
        "code": "   int f() { return 42; }\n",
        "methodStartingLine": 4,
        "methodEndingLine": 4,
        "jml": "//@ ensures \\result > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/firstTouch/11-StateMerging/A.java",
        "code": "   Object g() { return this; }\n",
        "methodStartingLine": 7,
        "methodEndingLine": 7,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/firstTouch/11-StateMerging/A.java",
        "code": "   boolean m(boolean b) {\n       boolean r;\n       if(b) {\n           r = f() > 0;\n       } else {\n           r = g() != null;\n       }\n       \n       //@ merge_point;\n       \n       return r;\n   }\n",
        "methodStartingLine": 10,
        "methodEndingLine": 21,
        "jml": "//@ ensures \\result;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/comprehensions/src/GSum.java",
        "code": "  void /*@ helper @*/ doNothing(){}\n",
        "methodStartingLine": 4,
        "methodEndingLine": 4,
        "jml": "//@ ensures (\\num_of Object o, p; false) == (\\sum \\real r; 0);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/SmansEtAl/src/CellClient.java",
        "code": "    Cell m() {\n\tCell c1 = new Cell();\n\tc1.setX(5);\n\t\n\tCell c2 = new Cell();\n\tc2.setX(10);\n\t\n\treturn c1;\n    }\n",
        "methodStartingLine": 4,
        "methodEndingLine": 12,
        "jml": "//@ ensures \\result.getX() == 5;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/jml-min/Min.java",
        "code": "  void bar(){}\n",
        "methodStartingLine": 4,
        "methodEndingLine": 4,
        "jml": "//@ ensures (\\min int x; x > 40; x+1) == 42;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/jml-min/Min.java",
        "code": "  void foo(){} \n",
        "methodStartingLine": 7,
        "methodEndingLine": 7,
        "jml": "//@ ensures (\\min int x; false; 42) == 42;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/jml-min/Min.java",
        "code": "  void foo2(){} \n",
        "methodStartingLine": 10,
        "methodEndingLine": 10,
        "jml": "//@ ensures (\\min int x; false; 42) != 42;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/linkedListSimple/LinkedList.java",
        "code": "    public void foo(){}\n",
        "methodStartingLine": 8,
        "methodEndingLine": 8,
        "jml": "//@ requires index == index;\n//@ ensures this != next;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/firstTouch/07-Cell/src/CellClient.java",
        "code": "    Cell m() {\n\tCell c1 = new Cell();\n\tc1.setX(5);\n\t\n\tCell c2 = new Cell();\n\tc2.setX(10);\n\t\n\treturn c1;\n    }\n",
        "methodStartingLine": 4,
        "methodEndingLine": 12,
        "jml": "//@ ensures \\result.getX() == 5;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/java5/src/For.java",
        "code": "  int sum (int[] a) {\n    int s = 0;\n    int z = a.length;\n\n    /*@ maintaining s == (\\sum int j; 0 <= j && j < \\index; a[j]);\n      @ maintaining 0 <= \\index && \\index <= a.length;\n      @ decreasing a.length - \\index;\n      @ assignable \\strictly_nothing;\n      @*/\n    for (int i: a) s+= i;\n    return s;\n  }\n",
        "methodStartingLine": 7,
        "methodEndingLine": 18,
        "jml": "//@ ensures \\result == (\\sum int j; 0 <= j && j < a.length; a[j]);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/deepNonNull/Arrays.java",
        "code": "    public Object[] get() { return a; }\n",
        "methodStartingLine": 6,
        "methodEndingLine": 6,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/deepNonNull/Arrays.java",
        "code": "    public String head() { return a[0]; }\n",
        "methodStartingLine": 9,
        "methodEndingLine": 9,
        "jml": "//@ requires a.length > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/deepNonNull/Arrays.java",
        "code": "    public Object[][][] head (Object[][][][] x) { return x[0]; } \n",
        "methodStartingLine": 12,
        "methodEndingLine": 12,
        "jml": "//@ requires x.length > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/deepNonNull/Arrays.java",
        "code": "    public void unprovable (/*@ nullable @*/ Object o) {}\n",
        "methodStartingLine": 17,
        "methodEndingLine": 17,
        "jml": "//@ requires a == o && o != null;\n//@ ensures \\invariant_for(this);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/inconsistent_represents/src/MyClass.java",
        "code": "    int m() {\n\treturn 27;\n    }\n",
        "methodStartingLine": 9,
        "methodEndingLine": 11,
        "jml": "//@ ensures \\result == 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/inconsistent_represents/src/MyClass.java",
        "code": "    int n() {\n\treturn 27;\n    }\n",
        "methodStartingLine": 16,
        "methodEndingLine": 18,
        "jml": "//@ requires size != evil;\n//@ ensures \\result == 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/jml-bigint/src/Mult.java",
        "code": "    public void cast () {\n        //@ ghost \\bigint z = 256;\n        //@ set b = (byte) z;\n        {}\n    }\n",
        "methodStartingLine": 44,
        "methodEndingLine": 48,
        "jml": "//@ ensures b == 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/vstte12_03_RingBuffer/src/RingBuffer.java",
        "code": "    static void test (int x, int y, int z){\n        RingBuffer b = new RingBuffer(2);\n        b.push(x);\n        b.push(y);\n        int h = b.pop();\n        assert h == x;\n        b.push(z);\n        h = b.pop();\n        assert h == y;\n        h = b.pop();\n        assert h == z;\n    }\n",
        "methodStartingLine": 106,
        "methodEndingLine": 117,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/integerSemantics/classes/Bigint.java",
        "code": "  void foo(){\n   //@ set x = 444444444444444444444444444444444;\n   //@ set y = (int) x * 4444444444444444;\n   //@ set x = x * 4444444444444444;\n   {}\n  }\n",
        "methodStartingLine": 8,
        "methodEndingLine": 13,
        "jml": "//@ ensures x > 0;\n//@ ensures y < 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/standard_key/java_dl/java5/src/ForReferenceArray.java",
        "code": "  void foo(Object[] as) {\n    //@ maintaining 0 <= \\index && \\index <= as.length; \n    //@ decreasing as.length-\\index;\n    //@ assignable \\strictly_nothing;\n    for (Object a: as) ;\n  }\n",
        "methodStartingLine": 6,
        "methodEndingLine": 11,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/InformationFlow/NewObjects/src/object/AmtoftBanerjee3.java",
        "code": "    void m() {\n        b = x + (a % 4);\n    }\n",
        "methodStartingLine": 13,
        "methodEndingLine": 15,
        "jml": "//@ requires (a % 4) == 3;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/InformationFlow/NewObjects/src/object/AmtoftBanerjee2.java",
        "code": "    int expensive(int z) {\n        return z;\n    }\n",
        "methodStartingLine": 34,
        "methodEndingLine": 36,
        "jml": "//@ ensures \\result == expensive(z);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/InformationFlow/BlockContracts/src/contract/IFBlockExamples.java",
        "code": "        public void block_while_secure(int l) {\n            int l1 = low;\n            //@ normal_behavior\n            //@ assignable \\nothing;\n            //@ determines l1 \\by \\itself;\n            { l1++;\n            }\n\n           /*@\n             @ loop_invariant l >= 0;\n             @ assignable \\nothing;\n             @ determines l1, l \\by \\itself;\n             @ decreases l;\n             @*/\n            while (l > 0) {\n                l--;\n                l1++;\n            }\n\n            low = l1;\n        }\n",
        "methodStartingLine": 203,
        "methodEndingLine": 223,
        "jml": "//@ requires l > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/InformationFlow/BlockContracts/src/contract/IFBlockExamples.java",
        "code": "        public void while_block_secure(int l) {\n            int l1 = low;\n           /*@\n             @ loop_invariant l >= 0;\n             @ assignable \\nothing;\n             @ determines l1, l \\by \\itself;\n             @ decreases l;\n             @*/\n            while (l > 0) {\n                l--;\n                l1++;\n            }\n\n            //@ normal_behavior\n            //@ assignable \\nothing;\n            //@ determines l1 \\by \\itself;\n            { l1++;\n            }\n\n            low = l1;\n        }\n",
        "methodStartingLine": 228,
        "methodEndingLine": 248,
        "jml": "//@ requires l > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/InformationFlow/BlockContracts/src/contract/IFBlockExamples.java",
        "code": "        public void while_block_insecure(int l) {\n            int l1 = low;\n           /*@\n             @ loop_invariant l >= 0;\n             @ assignable \\nothing;\n             @ determines l \\by \\itself;\n             @ decreases l;\n             @*/\n            while (l > 0) {\n                l--;\n                l1++;\n            }\n\n            //@ normal_behavior\n            //@ assignable \\nothing;\n            //@ determines l1 \\by \\itself;\n            { l1++;\n            }\n\n            low = l1;\n        }\n",
        "methodStartingLine": 252,
        "methodEndingLine": 272,
        "jml": "//@ requires l > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/InformationFlow/BlockContracts/src/contract/IFBlockExamples.java",
        "code": "        public void block_no_return_secure(int l) {\n            int l1 = low;\n\n            //@ normal_behavior\n            //@ assignable \\nothing;\n            //@ determines l1 \\by \\itself;\n            { l1++;\n            }\n\n            low = l1;\n        }\n",
        "methodStartingLine": 276,
        "methodEndingLine": 286,
        "jml": "//@ requires l > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/vacid0_05_RedBlackTrees/src/vacid0/redblacktree/Harness.java",
        "code": "  public static void redBlackTestHarness(AbstractMap a, AbstractMap b) {\n    a.replace(1, 1); \n    b.replace(1, 10);\n    a.replace(2, 2); \n    b.replace(2, 20);\n    assert(a.lookup(1) == 1 && a.lookup(42) == 0);\n    assert(b.lookup(1) == 10 && b.lookup(42) == 1);\n    a.remove(1); \n    b.remove(2);\n    assert(a.lookup(1) == 0 && a.lookup(42) == 0);\n    assert(b.lookup(2) == 1 && b.lookup(42) == 1);\n  }\n",
        "methodStartingLine": 19,
        "methodEndingLine": 30,
        "jml": "//@ requires a.isEmpty && a.defaultValue == 0 && \\invariant_for(a);\n//@ requires b.isEmpty && b.defaultValue == 1 && \\invariant_for(b);\n//@ requires \\disjoint(a.footprint,b.footprint);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/vacid0_05_RedBlackTrees/src/vacid0/redblacktree/Harness.java",
        "code": "  public static void testEmpty(AbstractMap a, int k) {\n    assert a.lookup(k) == 0;\n  }\n",
        "methodStartingLine": 36,
        "methodEndingLine": 38,
        "jml": "//@ requires a.isEmpty && \\invariant_for(a) && a.defaultValue == 0 && 0 <= k && k < a.contents.length;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/vacid0_05_RedBlackTrees/src/vacid0/redblacktree/Harness.java",
        "code": "  public static void testSimpleReplaceAndRemove(AbstractMap a) {\n    a.replace(1, 1); \n    assert(a.lookup(1) == 1);\n    assert(a.lookup(42) == 0);\n    a.remove(1);\n    assert(a.lookup(1) == 0);\n\n  }\n",
        "methodStartingLine": 41,
        "methodEndingLine": 48,
        "jml": "//@ requires a.isEmpty && \\invariant_for(a) && a.defaultValue == 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/vacid0_05_RedBlackTrees/src/vacid0/redblacktree/Harness.java",
        "code": "  public static void testDisjointnessPreservation(AbstractMap a, AbstractMap b){\n      a.replace(3, 27);\n  }\n",
        "methodStartingLine": 53,
        "methodEndingLine": 55,
        "jml": "//@ requires \\invariant_for(a) && \\invariant_for(b);\n//@ requires \\disjoint(a.footprint,b.footprint);\n//@ ensures \\disjoint(a.footprint,b.footprint);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.test/resources/testcase/merge/A.java",
        "code": "   int f() { return 42; }\n",
        "methodStartingLine": 4,
        "methodEndingLine": 4,
        "jml": "//@ ensures \\result > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.test/resources/testcase/merge/A.java",
        "code": "   Object g() { return this; }\n",
        "methodStartingLine": 7,
        "methodEndingLine": 7,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.test/resources/testcase/merge/A.java",
        "code": "   boolean m(boolean b) {\n       boolean r;\n       if(b) {\n           r = f() > 0;\n       } else {\n           r = g() != null;\n       }\n       //@ merge_point;\n       return r;\n   }\n",
        "methodStartingLine": 10,
        "methodEndingLine": 19,
        "jml": "//@ ensures \\result;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/heap/polarity_tests/src/Test.java",
        "code": "    void m(){x=5;}\n",
        "methodStartingLine": 5,
        "methodEndingLine": 5,
        "jml": "//@ requires true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_1 () {\n    x++;\n  }\n",
        "methodStartingLine": 7,
        "methodEndingLine": 9,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_2 () {\n    x++;\n    x++;\n  }\n",
        "methodStartingLine": 13,
        "methodEndingLine": 16,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_3 () {\n    x++;\n    x++;\n    x++;\n  }\n",
        "methodStartingLine": 20,
        "methodEndingLine": 24,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_4 () {\n    x++;\n    x++;\n    x++;\n    x++;\n  }\n",
        "methodStartingLine": 28,
        "methodEndingLine": 33,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_5 () {\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n  }\n",
        "methodStartingLine": 37,
        "methodEndingLine": 43,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_6 () {\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n  }\n",
        "methodStartingLine": 47,
        "methodEndingLine": 54,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_7 () {\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n  }\n",
        "methodStartingLine": 58,
        "methodEndingLine": 66,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_8 () {\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n  }\n",
        "methodStartingLine": 70,
        "methodEndingLine": 79,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_9 () {\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n }\n",
        "methodStartingLine": 83,
        "methodEndingLine": 93,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_10 () {\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n }\n",
        "methodStartingLine": 97,
        "methodEndingLine": 108,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc.java",
        "code": "  void foo_20 () {\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n    x++;\n  }\n",
        "methodStartingLine": 112,
        "methodEndingLine": 133,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_1 () {\n    x++; y++;\n  }\n",
        "methodStartingLine": 7,
        "methodEndingLine": 9,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_2 () {\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 13,
        "methodEndingLine": 16,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_3 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 20,
        "methodEndingLine": 24,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_4 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 28,
        "methodEndingLine": 33,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_5 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 37,
        "methodEndingLine": 43,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_6 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 47,
        "methodEndingLine": 54,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_7 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 58,
        "methodEndingLine": 66,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_8 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 70,
        "methodEndingLine": 79,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_9 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 83,
        "methodEndingLine": 93,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_10 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 97,
        "methodEndingLine": 108,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_20 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 112,
        "methodEndingLine": 133,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void foo_40 () {\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n    x++; y++;\n  }\n",
        "methodStartingLine": 137,
        "methodEndingLine": 178,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Inc2.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 183,
        "methodEndingLine": 183,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_1 () {\n    x++; bar();\n  }\n",
        "methodStartingLine": 11,
        "methodEndingLine": 13,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_2 () {\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 18,
        "methodEndingLine": 21,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_3 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 26,
        "methodEndingLine": 30,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_4 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 35,
        "methodEndingLine": 40,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_5 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 45,
        "methodEndingLine": 51,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_6 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 56,
        "methodEndingLine": 63,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_7 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 68,
        "methodEndingLine": 76,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_8 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 81,
        "methodEndingLine": 90,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_9 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 95,
        "methodEndingLine": 105,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_10 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 110,
        "methodEndingLine": 121,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void foo_20 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 126,
        "methodEndingLine": 147,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 151,
        "methodEndingLine": 151,
        "jml": "//@ ensures \\new_elems_fresh(footprint);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_1 () {\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 15,
        "methodEndingLine": 17,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_2 () {\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 23,
        "methodEndingLine": 26,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_3 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 32,
        "methodEndingLine": 36,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_4 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 42,
        "methodEndingLine": 47,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_5 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 53,
        "methodEndingLine": 59,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_6 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 65,
        "methodEndingLine": 72,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_7 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 78,
        "methodEndingLine": 86,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_8 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 92,
        "methodEndingLine": 101,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_9 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 107,
        "methodEndingLine": 117,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_10 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 123,
        "methodEndingLine": 134,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void foo_20 () {\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n    x++; y++; bar();\n  }\n",
        "methodStartingLine": 140,
        "methodEndingLine": 161,
        "jml": "//@ requires x > 0 & y > 0;\n//@ requires \\subset(\\locset(x, y), rep);\n//@ requires \\disjoint(rep, rep2);\n//@ ensures x > 0 & y > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Dynamic2.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 165,
        "methodEndingLine": 165,
        "jml": "//@ ensures \\new_elems_fresh(rep2);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Contract.java",
        "code": "  void foo () {\n    x++; bar();\n  }\n",
        "methodStartingLine": 8,
        "methodEndingLine": 10,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Contract.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 15,
        "methodEndingLine": 15,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_1 () {\n    x++; bar();\n  }\n",
        "methodStartingLine": 10,
        "methodEndingLine": 12,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_2 () {\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 17,
        "methodEndingLine": 20,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_3 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 25,
        "methodEndingLine": 29,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_4 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 34,
        "methodEndingLine": 39,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_5 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 44,
        "methodEndingLine": 50,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_6 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 55,
        "methodEndingLine": 62,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_7 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 67,
        "methodEndingLine": 75,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_8 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 80,
        "methodEndingLine": 89,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_9 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 94,
        "methodEndingLine": 104,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_10 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 109,
        "methodEndingLine": 120,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void foo_20 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 125,
        "methodEndingLine": 146,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/GhostFrame.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 151,
        "methodEndingLine": 151,
        "jml": "//@ ensures \\disjoint(footprint,\\singleton(x));"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_1 () {\n    x++; bar();\n  }\n",
        "methodStartingLine": 11,
        "methodEndingLine": 13,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_2 () {\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 18,
        "methodEndingLine": 21,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_3 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 26,
        "methodEndingLine": 30,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_4 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 35,
        "methodEndingLine": 40,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_5 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 45,
        "methodEndingLine": 51,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_6 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 56,
        "methodEndingLine": 63,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_7 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 68,
        "methodEndingLine": 76,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_8 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 81,
        "methodEndingLine": 90,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_9 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 95,
        "methodEndingLine": 105,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_10 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 110,
        "methodEndingLine": 121,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void foo_20 () {\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n    x++; bar();\n  }\n",
        "methodStartingLine": 126,
        "methodEndingLine": 147,
        "jml": "//@ requires x > 0;\n//@ requires \\disjoint(footprint,\\singleton(x));\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/Modelfield.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 152,
        "methodEndingLine": 152,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_1 () {\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 16,
        "methodEndingLine": 18,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_2 () {\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 23,
        "methodEndingLine": 26,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_3 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 31,
        "methodEndingLine": 35,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_4 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 40,
        "methodEndingLine": 45,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_5 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 50,
        "methodEndingLine": 56,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_6 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 61,
        "methodEndingLine": 68,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_7 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 73,
        "methodEndingLine": 81,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_8 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 86,
        "methodEndingLine": 95,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_9 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 100,
        "methodEndingLine": 110,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_10 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 115,
        "methodEndingLine": 126,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "    void dynamicGhost_20 () {\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n        x++; c.helper();\n    }\n",
        "methodStartingLine": 131,
        "methodEndingLine": 152,
        "jml": "//@ requires x > 0;\n//@ ensures x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/DynamicGhost.java",
        "code": "        public void helper() {}\n",
        "methodStartingLine": 167,
        "methodEndingLine": 167,
        "jml": "//@ ensures \\new_elems_fresh(rep);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_1() {\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 10,
        "methodEndingLine": 12,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_2() {\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 18,
        "methodEndingLine": 21,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_3() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 27,
        "methodEndingLine": 31,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_4() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 37,
        "methodEndingLine": 42,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_5() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 48,
        "methodEndingLine": 54,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_6() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 60,
        "methodEndingLine": 67,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_7() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 73,
        "methodEndingLine": 81,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_8() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 87,
        "methodEndingLine": 96,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_9() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 102,
        "methodEndingLine": 112,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_10() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 118,
        "methodEndingLine": 129,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void foo_20() {\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n    a.x++; bar();\n  }\n",
        "methodStartingLine": 135,
        "methodEndingLine": 156,
        "jml": "//@ requires a != null;\n//@ requires a.x > 0;\n//@ ensures a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain1.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 161,
        "methodEndingLine": 161,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_1 () {\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 10,
        "methodEndingLine": 12,
        "jml": "//@ requires a != null && a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_2 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 18,
        "methodEndingLine": 21,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_3 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 27,
        "methodEndingLine": 31,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_4 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 37,
        "methodEndingLine": 42,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_5 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 48,
        "methodEndingLine": 54,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_6 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 60,
        "methodEndingLine": 67,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_7 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 73,
        "methodEndingLine": 81,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_8 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 87,
        "methodEndingLine": 96,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_9 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 102,
        "methodEndingLine": 112,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_10 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 118,
        "methodEndingLine": 129,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void foo_20 () {\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n    a.a.x++; bar();\n  }\n",
        "methodStartingLine": 135,
        "methodEndingLine": 156,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.x > 0;\n//@ ensures a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain2.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 161,
        "methodEndingLine": 161,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_1 () {\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 10,
        "methodEndingLine": 12,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_2 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 18,
        "methodEndingLine": 21,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_3 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 27,
        "methodEndingLine": 31,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_4 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 37,
        "methodEndingLine": 42,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_5 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 48,
        "methodEndingLine": 54,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_6 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 60,
        "methodEndingLine": 67,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_7 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 73,
        "methodEndingLine": 81,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_8 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 87,
        "methodEndingLine": 96,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_9 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 102,
        "methodEndingLine": 112,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_10 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 118,
        "methodEndingLine": 129,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void foo_20 () {\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n    a.a.a.a.x++; bar();\n  }\n",
        "methodStartingLine": 135,
        "methodEndingLine": 156,
        "jml": "//@ requires a != null && a.a != null && a.a.a != null && a.a.a.a != null;\n//@ requires a.a.a.a.x > 0;\n//@ ensures a.a.a.a.x > 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/performance-test/src.templates/AccessChain4.java",
        "code": "  void bar () {};\n",
        "methodStartingLine": 161,
        "methodEndingLine": 161,
        "jml": "//@ ensures true;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testFileDeleted/File.java",
        "code": "\tpublic static int add(int x, int y) {\n\t\treturn x + y;\n\t}\n",
        "methodStartingLine": 5,
        "methodEndingLine": 7,
        "jml": "//@ ensures \\result == x + y;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testFileDeleted/File.java",
        "code": "\tpublic static int sub(int x, int y) {\n\t\treturn x - y;\n\t}\n",
        "methodStartingLine": 10,
        "methodEndingLine": 12,
        "jml": "//@ ensures \\result == x - y;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testTestCaseGeneration/A.java",
        "code": "   public int id(int x) {\n      return x;\n   }\n",
        "methodStartingLine": 4,
        "methodEndingLine": 6,
        "jml": "//@ ensures \\result == x; "
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.symbolic_execution.test/resources/testcase/set/variablesArrayCreationTest/test/ArrayCreationTest.java",
        "code": "   public static int[] main(int n) {\n      array = new int[n];\n      array[0] = 100;\n      array[1] = array[2];\n      array[3] = array[0];\n      return array;\n   }\n",
        "methodStartingLine": 5,
        "methodEndingLine": 11,
        "jml": "//@ requires n >= 4;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testTestSuiteGeneration/src/A.java",
        "code": "   public int id(int x) {\n      return x;\n   }\n",
        "methodStartingLine": 4,
        "methodEndingLine": 6,
        "jml": "//@ ensures \\result == x; "
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.symbolic_execution.test/resources/testcase/set/variablesArrayAssignmentTest/test/ArrayAssignmentTest.java",
        "code": "   public static int[] main(int[] array) {\n      array[0] = 100;\n      array[1] = array[2];\n      array[3] = array[0];\n      return array;\n   }\n",
        "methodStartingLine": 3,
        "methodEndingLine": 8,
        "jml": "//@ requires array.length >= 4;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testTestCaseGeneration/testpackage/B.java",
        "code": "   public int id(int x) {\n      return x;\n   }\n",
        "methodStartingLine": 6,
        "methodEndingLine": 8,
        "jml": "//@ ensures \\result == x; "
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.symbolic_execution.test/resources/testcase/set/variablesEmptyArrayCreationTest/test/EmptyArrayCreationTest.java",
        "code": "   public static int[] main(EmptyArrayCreationTest obj, int n) {\n      obj.array = new int[n];\n      return obj.array;\n   }\n",
        "methodStartingLine": 5,
        "methodEndingLine": 8,
        "jml": "//@ requires n == 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.symbolic_execution.test/resources/testcase/set/configurationExtractorArrayCreationTest/test/ArrayCreationTest.java",
        "code": "   public static int[] compute(int n) {\n      array = new int[n];\n      array[0] = 100;\n      array[1] = array[2];\n      array[3] = array[0];\n      return array;\n   }\n",
        "methodStartingLine": 5,
        "methodEndingLine": 11,
        "jml": "//@ requires n >= 4;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testTestSuiteGeneration/src/testpackage/B.java",
        "code": "   public int id(int x) {\n      return x;\n   }\n",
        "methodStartingLine": 6,
        "methodEndingLine": 8,
        "jml": "//@ ensures \\result == x; "
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.symbolic_execution.test/resources/testcase/set/variablesArrayCreationInstanceTest/test/ArrayCreationInstanceTest.java",
        "code": "   public static int[] main(ArrayCreationInstanceTest obj, int n) {\n      obj.array = new int[n];\n      obj.array[0] = 100;\n      obj.array[1] = obj.array[2];\n      obj.array[3] = obj.array[0];\n      return obj.array;\n   }\n",
        "methodStartingLine": 5,
        "methodEndingLine": 11,
        "jml": "//@ requires n >= 4;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.symbolic_execution.test/resources/testcase/set/variablesNonSimpleArrayCreationTest/test/NonSimpleArrayCreationTest.java",
        "code": "   public static NonSimpleArrayCreationTest[] main(int n, NonSimpleArrayCreationTest instance) {\n      array = new NonSimpleArrayCreationTest[n];\n      array[0] = instance;\n      array[1] = array[2];\n      array[3] = array[0];\n      return array;\n   }\n",
        "methodStartingLine": 8,
        "methodEndingLine": 14,
        "jml": "//@ requires n >= 4;\n//@ requires instance.value == 100;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testTestCaseGeneration/testpackage/sub/sub/C.java",
        "code": "   public int id(int x) {\n      return x;\n   }\n",
        "methodStartingLine": 6,
        "methodEndingLine": 8,
        "jml": "//@ ensures \\result == x; "
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testTestCaseGeneration/testpackage/sub/sub/D.java",
        "code": "   public int id(int x) {\n      return x;\n   }\n",
        "methodStartingLine": 6,
        "methodEndingLine": 8,
        "jml": "//@ ensures \\result == x; "
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.symbolic_execution.test/resources/testcase/set/variablesNonSimpleArrayAssignmentTest/test/NonSimpleArrayAssignmentTest.java",
        "code": "   public static NonSimpleArrayAssignmentTest[] main(NonSimpleArrayAssignmentTest[] array) {\n      array[0].value = 100;\n      array[1].value = array[2].value;\n      array[3].value = array[0].value;\n      return array;\n   }\n",
        "methodStartingLine": 5,
        "methodEndingLine": 10,
        "jml": "//@ requires array.length >= 4;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.core.symbolic_execution.test/resources/testcase/set/configurationExtractorEmptyArrayCreationTest/test/EmptyArrayCreationTest.java",
        "code": "   public static int[] compute(EmptyArrayCreationTest obj, int n) {\n      obj.array = new int[n];\n      return obj.array;\n   }\n",
        "methodStartingLine": 5,
        "methodEndingLine": 8,
        "jml": "//@ requires n == 0;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/key/key.ui/examples/InformationFlow/NewObjects/src/object/ObjectOrientation.java",
        "code": "    public void secure_while_i(Object[] a) {\n        /*@ loop_invariant 0 <= i && i <= a.length;\n            loop_invariant a != null && \\typeof(a) == \\type(Object[]);\n            assignable a[*];\n            decreases a.length - i;\n            determines i, a.length, (\\seq_def int j; 0; i; a[j])\n                   \\by \\itself\n                   \\new_objects a[i-1];\n          @*/\n        for (int i = 0; i < a.length; i++) {\n            a[i] = new Object();\n        }\n    }\n",
        "methodStartingLine": 108,
        "methodEndingLine": 120,
        "jml": "//@ requires    \\typeof(a) == \\type(Object[]);"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testChangeInvariant/Child.java",
        "code": "\tpublic int add(int x, int y){\n\t\treturn x + y;\n\t}\n",
        "methodStartingLine": 9,
        "methodEndingLine": 11,
        "jml": "//@ ensures \\result == x + y;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testChangeInvariant/ChangedChild.java",
        "code": "\tpublic int add(int x, int y){\n\t\treturn x + y;\n\t}\n",
        "methodStartingLine": 9,
        "methodEndingLine": 11,
        "jml": "//@ ensures \\result == x + y;"
    },
    {
        "repository": "github.com/tdelta/KollaborierbaR",
        "file": "key/KeY4Eclipse/src/tests/org.key_project.key4eclipse.resources.test/data/BuilderTests/testChangeInvariant/InvariantInOperationContract.java",
        "code": "\tpublic int add(int x, int y){\n\t\treturn x + y;\n\t}\n",
        "methodStartingLine": 15,
        "methodEndingLine": 17,
        "jml": "//@ ensures \\result == x + y;"
    }
]