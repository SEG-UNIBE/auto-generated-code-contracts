[
    {
        "repository": "github.com/overturetool/overture",
        "file": "core/codegen/vdm2jml/src/test/resources/dynamic_analysis/prepost/PreCond/Entry.java",
        "code": "  public static Number opRet(final Number a) {\n\n    //@ assert Utils.is_nat(a);\n\n    //@ assert St != null;\n\n    St.set_x(a.longValue() + 1L);\n\n    Number ret_1 = St.get_x();\n    //@ assert Utils.is_nat(ret_1);\n\n    return ret_1;\n  }\n",
        "methodStartingLine": 39,
        "methodEndingLine": 51,
        "jml": "//@ requires pre_opRet(a,St);"
    },
    {
        "repository": "github.com/overturetool/overture",
        "file": "core/codegen/vdm2jml/src/test/resources/dynamic_analysis/prepost/PreCond/Entry.java",
        "code": "  public static void opVoid(final Number a) {\n\n    //@ assert Utils.is_nat(a);\n\n    //@ assert St != null;\n\n    St.set_x(a.longValue() + 1L);\n  }\n",
        "methodStartingLine": 54,
        "methodEndingLine": 61,
        "jml": "//@ requires pre_opVoid(a,St);"
    },
    {
        "repository": "github.com/overturetool/overture",
        "file": "core/codegen/vdm2jml/src/test/resources/dynamic_analysis/prepost/PreCond/Entry.java",
        "code": "  public static Number id(final Number a) {\n\n    //@ assert Utils.is_int(a);\n\n    Number ret_2 = a;\n    //@ assert Utils.is_int(ret_2);\n\n    return ret_2;\n  }\n",
        "methodStartingLine": 65,
        "methodEndingLine": 73,
        "jml": "//@ requires pre_id(a);"
    },
    {
        "repository": "github.com/overturetool/overture",
        "file": "core/codegen/vdm2jml/src/test/resources/dynamic_analysis/prepost/PostCond/Entry.java",
        "code": "  public static void opVoid() {\n\n    //@ assert St != null;\n\n    St.set_x(St.get_x().longValue() + 1L);\n  }\n",
        "methodStartingLine": 42,
        "methodEndingLine": 47,
        "jml": "//@ ensures post_opVoid(\\old(St.copy()),St);"
    },
    {
        "repository": "github.com/overturetool/overture",
        "file": "core/codegen/vdm2jml/src/test/resources/dynamic_analysis/prepost/PostCond/Entry.java",
        "code": "  public static Number opRet(final Number a) {\n\n    //@ assert Utils.is_nat(a);\n\n    //@ assert St != null;\n\n    St.set_x(St.get_x().longValue() + 1L);\n\n    Number ret_1 = St.get_x();\n    //@ assert Utils.is_nat(ret_1);\n\n    return ret_1;\n  }\n",
        "methodStartingLine": 50,
        "methodEndingLine": 62,
        "jml": "//@ ensures post_opRet(a,\\result,\\old(St.copy()),St);"
    },
    {
        "repository": "github.com/overturetool/overture",
        "file": "core/codegen/vdm2jml/src/test/resources/dynamic_analysis/prepost/PostCond/Entry.java",
        "code": "  public static Number f(final Number a) {\n\n    //@ assert Utils.is_nat(a);\n\n    if (Utils.equals(Utils.mod(a.longValue(), 2L), 0L)) {\n      Number ret_2 = a.longValue() + 2L;\n      //@ assert Utils.is_nat(ret_2);\n\n      return ret_2;\n\n    } else {\n      Number ret_3 = a.longValue() + 1L;\n      //@ assert Utils.is_nat(ret_3);\n\n      return ret_3;\n    }\n  }\n",
        "methodStartingLine": 66,
        "methodEndingLine": 82,
        "jml": "//@ ensures post_f(a,\\result);"
    }
]