[
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayList_JML_Test.java",
        "code": "    public static junit.framework.Test suite() {\n        TwoWayList_JML_Test testobj\n            = new TwoWayList_JML_Test(\"TwoWayList_JML_Test\");\n        junit.framework.TestSuite testsuite = testobj.overallTestSuite();\n        // Add instances of Test found by the reflection mechanism.\n        testsuite.addTestSuite(TwoWayList_JML_Test.class);\n        testobj.addTestSuiteForEachMethod(testsuite);\n        return testsuite;\n    }\n",
        "methodStartingLine": 50,
        "methodEndingLine": 58,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayList_JML_Test.java",
        "code": "        public void run(junit.framework.TestResult result) {\n            this.result = result;\n            super.run(result);\n        }\n",
        "methodStartingLine": 77,
        "methodEndingLine": 80,
        "jml": "//@ requires result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayList_JML_Test.java",
        "code": "    public void addTestSuiteForEachMethod\n        (junit.framework.TestSuite overallTestSuite$)\n    {\n        try {\n            this.addTestSuiteFor$TestTwoWayList(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestDecrementCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestLastEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestRemoveEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestInsertAfterCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestInsertBeforeCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestClone(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestCreateIterator(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestLength(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsEmpty(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestEquals(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestHashCode(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestAppend(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestRemoveAllEntries(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestFirstEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIncrementCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsOffEnd(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsOffFront(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestGetEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestReplaceEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestToString(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n    }\n",
        "methodStartingLine": 137,
        "methodEndingLine": 266,
        "jml": "//@ requires overallTestSuite$ != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/OneWayList_JML_Test.java",
        "code": "    public static junit.framework.Test suite() {\n        OneWayList_JML_Test testobj\n            = new OneWayList_JML_Test(\"OneWayList_JML_Test\");\n        junit.framework.TestSuite testsuite = testobj.overallTestSuite();\n        // Add instances of Test found by the reflection mechanism.\n        testsuite.addTestSuite(OneWayList_JML_Test.class);\n        testobj.addTestSuiteForEachMethod(testsuite);\n        return testsuite;\n    }\n",
        "methodStartingLine": 50,
        "methodEndingLine": 58,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/OneWayList_JML_Test.java",
        "code": "        public void run(junit.framework.TestResult result) {\n            this.result = result;\n            super.run(result);\n        }\n",
        "methodStartingLine": 77,
        "methodEndingLine": 80,
        "jml": "//@ requires result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/OneWayList_JML_Test.java",
        "code": "    public void addTestSuiteForEachMethod\n        (junit.framework.TestSuite overallTestSuite$)\n    {\n        try {\n            this.addTestSuiteFor$TestOneWayList(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestFirstEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIncrementCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsOffEnd(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsOffFront(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestGetEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestRemoveEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestReplaceEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestInsertAfterCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestInsertBeforeCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestClone(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestToString(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n    }\n",
        "methodStartingLine": 137,
        "methodEndingLine": 212,
        "jml": "//@ requires overallTestSuite$ != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/E_OneWayList_JML_Test.java",
        "code": "    public static junit.framework.Test suite() {\n        E_OneWayList_JML_Test testobj\n            = new E_OneWayList_JML_Test(\"E_OneWayList_JML_Test\");\n        junit.framework.TestSuite testsuite = testobj.overallTestSuite();\n        // Add instances of Test found by the reflection mechanism.\n        testsuite.addTestSuite(E_OneWayList_JML_Test.class);\n        testobj.addTestSuiteForEachMethod(testsuite);\n        return testsuite;\n    }\n",
        "methodStartingLine": 50,
        "methodEndingLine": 58,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/E_OneWayList_JML_Test.java",
        "code": "        public void run(junit.framework.TestResult result) {\n            this.result = result;\n            super.run(result);\n        }\n",
        "methodStartingLine": 77,
        "methodEndingLine": 80,
        "jml": "//@ requires result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/E_OneWayList_JML_Test.java",
        "code": "    public void addTestSuiteForEachMethod\n        (junit.framework.TestSuite overallTestSuite$)\n    {\n        try {\n            this.addTestSuiteFor$TestE_OneWayList(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestLength(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsEmpty(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestEquals(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestHashCode(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestRemoveEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestInsertAfterCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestInsertBeforeCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestAppend(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestRemoveAllEntries(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestClone(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestFirstEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIncrementCursor(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsOffEnd(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsOffFront(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestGetEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestReplaceEntry(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestToString(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n    }\n",
        "methodStartingLine": 137,
        "methodEndingLine": 248,
        "jml": "//@ requires overallTestSuite$ != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayIterator_JML_Test.java",
        "code": "    public static junit.framework.Test suite() {\n        TwoWayIterator_JML_Test testobj\n            = new TwoWayIterator_JML_Test(\"TwoWayIterator_JML_Test\");\n        junit.framework.TestSuite testsuite = testobj.overallTestSuite();\n        // Add instances of Test found by the reflection mechanism.\n        testsuite.addTestSuite(TwoWayIterator_JML_Test.class);\n        testobj.addTestSuiteForEachMethod(testsuite);\n        return testsuite;\n    }\n",
        "methodStartingLine": 53,
        "methodEndingLine": 61,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayIterator_JML_Test.java",
        "code": "        public void run(junit.framework.TestResult result) {\n            this.result = result;\n            super.run(result);\n        }\n",
        "methodStartingLine": 80,
        "methodEndingLine": 83,
        "jml": "//@ requires result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayIterator_JML_Test.java",
        "code": "    public void addTestSuiteForEachMethod\n        (junit.framework.TestSuite overallTestSuite$)\n    {\n        try {\n            this.addTestSuiteFor$TestTwoWayIterator(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestFirst(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestNext(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsDone(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestCurrentItem(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestLast(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestPrevious(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestIsAtFront(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n        try {\n            this.addTestSuiteFor$TestToString(overallTestSuite$);\n        } catch (java.lang.Throwable ex) {\n            overallTestSuite$.addTest\n                (new org.jmlspecs.jmlunit.strategies.ConstructorFailed(ex));\n        }\n    }\n",
        "methodStartingLine": 140,
        "methodEndingLine": 197,
        "jml": "//@ requires overallTestSuite$ != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayList_JML_TestData.java",
        "code": "    public junit.framework.TestSuite overallTestSuite() {\n        return new junit.framework.TestSuite(\"Overall tests for TwoWayList\");\n    }\n",
        "methodStartingLine": 68,
        "methodEndingLine": 70,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayList_JML_TestData.java",
        "code": "    public junit.framework.TestSuite emptyTestSuiteFor\n        (java.lang.String methodName)\n    {\n        return new junit.framework.TestSuite(methodName);\n    }\n",
        "methodStartingLine": 85,
        "methodEndingLine": 89,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayList_JML_TestData.java",
        "code": "    protected org.jmlspecs.jmlunit.strategies.IndefiniteIterator\n        vorg_jmlspecs_samples_list_list2_TwoWayListIter\n        (java.lang.String methodName, int loopsThisSurrounds)\n    {\n        return vorg_jmlspecs_samples_list_list2_TwoWayListStrategy.iterator();\n    }\n",
        "methodStartingLine": 133,
        "methodEndingLine": 138,
        "jml": "//@ requires methodName != null && loopsThisSurrounds >= 0;\n//@ ensures \\fresh(\\result);"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayList_JML_TestData.java",
        "code": "                protected Object cloneElement(java.lang.Object o$) {\n                    org.jmlspecs.samples.list.list2.TwoWayList down$\n                        = (org.jmlspecs.samples.list.list2.TwoWayList) o$;\n                    return down$.clone();\n                }\n",
        "methodStartingLine": 193,
        "methodEndingLine": 197,
        "jml": "//@ requires o$ != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayList_JML_TestData.java",
        "code": "    protected org.jmlspecs.jmlunit.strategies.IndefiniteIterator\n        vjava_lang_ObjectIter\n        (java.lang.String methodName, int loopsThisSurrounds)\n    {\n        return vjava_lang_ObjectStrategy.iterator();\n    }\n",
        "methodStartingLine": 212,
        "methodEndingLine": 217,
        "jml": "//@ requires methodName != null && loopsThisSurrounds >= 0;\n//@ ensures \\fresh(\\result);"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/OneWayList_JML_TestData.java",
        "code": "    public junit.framework.TestSuite overallTestSuite() {\n        return new junit.framework.TestSuite(\"Overall tests for OneWayList\");\n    }\n",
        "methodStartingLine": 68,
        "methodEndingLine": 70,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/OneWayList_JML_TestData.java",
        "code": "    public junit.framework.TestSuite emptyTestSuiteFor\n        (java.lang.String methodName)\n    {\n        return new junit.framework.TestSuite(methodName);\n    }\n",
        "methodStartingLine": 85,
        "methodEndingLine": 89,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/OneWayList_JML_TestData.java",
        "code": "    protected org.jmlspecs.jmlunit.strategies.IndefiniteIterator\n        vorg_jmlspecs_samples_list_list2_OneWayListIter\n        (java.lang.String methodName, int loopsThisSurrounds)\n    {\n        return vorg_jmlspecs_samples_list_list2_OneWayListStrategy.iterator();\n    }\n",
        "methodStartingLine": 128,
        "methodEndingLine": 133,
        "jml": "//@ requires methodName != null && loopsThisSurrounds >= 0;\n//@ ensures \\fresh(\\result);"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/OneWayList_JML_TestData.java",
        "code": "                protected Object cloneElement(java.lang.Object o$) {\n                    org.jmlspecs.samples.list.list2.OneWayList down$\n                        = (org.jmlspecs.samples.list.list2.OneWayList) o$;\n                    return down$.clone();\n                }\n",
        "methodStartingLine": 180,
        "methodEndingLine": 184,
        "jml": "//@ requires o$ != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/OneWayList_JML_TestData.java",
        "code": "    protected org.jmlspecs.jmlunit.strategies.IndefiniteIterator\n        vjava_lang_ObjectIter\n        (java.lang.String methodName, int loopsThisSurrounds)\n    {\n        return vjava_lang_ObjectStrategy.iterator();\n    }\n",
        "methodStartingLine": 199,
        "methodEndingLine": 204,
        "jml": "//@ requires methodName != null && loopsThisSurrounds >= 0;\n//@ ensures \\fresh(\\result);"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/E_OneWayList_JML_TestData.java",
        "code": "    public junit.framework.TestSuite overallTestSuite() {\n        return new junit.framework.TestSuite(\"Overall tests for E_OneWayList\");\n    }\n",
        "methodStartingLine": 68,
        "methodEndingLine": 70,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/E_OneWayList_JML_TestData.java",
        "code": "    public junit.framework.TestSuite emptyTestSuiteFor\n        (java.lang.String methodName)\n    {\n        return new junit.framework.TestSuite(methodName);\n    }\n",
        "methodStartingLine": 85,
        "methodEndingLine": 89,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/E_OneWayList_JML_TestData.java",
        "code": "    protected org.jmlspecs.jmlunit.strategies.IndefiniteIterator\n        vjava_lang_ObjectIter\n        (java.lang.String methodName, int loopsThisSurrounds)\n    {\n        return vjava_lang_ObjectStrategy.iterator();\n    }\n",
        "methodStartingLine": 133,
        "methodEndingLine": 138,
        "jml": "//@ requires methodName != null && loopsThisSurrounds >= 0;\n//@ ensures \\fresh(\\result);"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/E_OneWayList_JML_TestData.java",
        "code": "    protected org.jmlspecs.jmlunit.strategies.IndefiniteIterator\n        vorg_jmlspecs_samples_list_list2_E_OneWayListIter\n        (java.lang.String methodName, int loopsThisSurrounds)\n    {\n        return vorg_jmlspecs_samples_list_list2_E_OneWayListStrategy.iterator();\n    }\n",
        "methodStartingLine": 191,
        "methodEndingLine": 196,
        "jml": "//@ requires methodName != null && loopsThisSurrounds >= 0;\n//@ ensures \\fresh(\\result);"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/E_OneWayList_JML_TestData.java",
        "code": "                protected Object cloneElement(java.lang.Object o$) {\n                    org.jmlspecs.samples.list.list2.E_OneWayList down$\n                        = (org.jmlspecs.samples.list.list2.E_OneWayList) o$;\n                    return down$.clone();\n                }\n",
        "methodStartingLine": 249,
        "methodEndingLine": 253,
        "jml": "//@ requires o$ != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayIterator_JML_TestData.java",
        "code": "    public junit.framework.TestSuite overallTestSuite() {\n        return new junit.framework.TestSuite(\"Overall tests for TwoWayIterator\");\n    }\n",
        "methodStartingLine": 72,
        "methodEndingLine": 74,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayIterator_JML_TestData.java",
        "code": "    public junit.framework.TestSuite emptyTestSuiteFor\n        (java.lang.String methodName)\n    {\n        return new junit.framework.TestSuite(methodName);\n    }\n",
        "methodStartingLine": 89,
        "methodEndingLine": 93,
        "jml": "//@ ensures \\result != null;"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayIterator_JML_TestData.java",
        "code": "    protected org.jmlspecs.jmlunit.strategies.IndefiniteIterator\n        vorg_jmlspecs_samples_list_list2_TwoWayIteratorIter\n        (java.lang.String methodName, int loopsThisSurrounds)\n    {\n        return vorg_jmlspecs_samples_list_list2_TwoWayIteratorStrategy.iterator();\n    }\n",
        "methodStartingLine": 168,
        "methodEndingLine": 173,
        "jml": "//@ requires methodName != null && loopsThisSurrounds >= 0;\n//@ ensures \\fresh(\\result);"
    },
    {
        "repository": "github.com/hipsleek/hipsleek",
        "file": "examples/jml/www.eecs.ucf.edu/~leavens/JML-release/org/jmlspecs/samples/list/list2/TwoWayIterator_JML_TestData.java",
        "code": "    protected org.jmlspecs.jmlunit.strategies.IndefiniteIterator\n        vorg_jmlspecs_samples_list_node_TwoWayNodeIter\n        (java.lang.String methodName, int loopsThisSurrounds)\n    {\n        return vorg_jmlspecs_samples_list_node_TwoWayNodeStrategy.iterator();\n    }\n",
        "methodStartingLine": 223,
        "methodEndingLine": 228,
        "jml": "//@ requires methodName != null && loopsThisSurrounds >= 0;\n//@ ensures \\fresh(\\result);"
    }
]